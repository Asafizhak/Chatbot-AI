name: Deploy to Azure AKS

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

env:
  AZURE_CONTAINER_REGISTRY: acrmsassignment2025
  CONTAINER_NAME: chatbot-ai
  RESOURCE_GROUP: rg-acr-demo
  CLUSTER_NAME: aks-demo-cluster
  DEPLOYMENT_MANIFEST_PATH: k8s/

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: '{"clientId":"${{ secrets.AZURE_CLIENT_ID }}","clientSecret":"${{ secrets.AZURE_CLIENT_SECRET }}","subscriptionId":"${{ secrets.AZURE_SUBSCRIPTION_ID }}","tenantId":"${{ secrets.AZURE_TENANT_ID }}"}'

    - name: Log in to Azure Container Registry
      run: |
        az acr login --name ${{ env.AZURE_CONTAINER_REGISTRY }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: |
          ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.CONTAINER_NAME }}:latest
          ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.CONTAINER_NAME }}:${{ github.sha }}

    - name: Set up kubectl
      uses: azure/setup-kubectl@v3

    - name: Get AKS credentials
      run: |
        az aks get-credentials --resource-group ${{ env.RESOURCE_GROUP }} --name ${{ env.CLUSTER_NAME }}

    - name: Create namespace if not exists
      run: |
        kubectl create namespace chatbot-ai --dry-run=client -o yaml | kubectl apply -f -

    - name: Create/Update Kubernetes secrets
      run: |
        kubectl create secret generic aws-bedrock-secrets \
          --from-literal=AWS_ACCESS_KEY="${{ secrets.AWS_ACCESS_KEY }}" \
          --from-literal=AWS_SECRET_KEY="${{ secrets.AWS_SECRET_KEY }}" \
          --from-literal=AWS_REGION="${{ secrets.AWS_REGION }}" \
          --from-literal=MODEL_ID="${{ secrets.MODEL_ID }}" \
          --from-literal=SYSTEM_PROMPT="${{ secrets.SYSTEM_PROMPT }}" \
          --namespace=chatbot-ai \
          --dry-run=client -o yaml | kubectl apply -f -

    - name: Deploy to AKS
      run: |
        # Replace image tag in deployment
        sed -i "s|IMAGE_TAG|${{ github.sha }}|g" ${{ env.DEPLOYMENT_MANIFEST_PATH }}deployment.yaml
        sed -i "s|ACR_NAME|${{ env.AZURE_CONTAINER_REGISTRY }}|g" ${{ env.DEPLOYMENT_MANIFEST_PATH }}deployment.yaml
        
        # Apply Kubernetes manifests
        kubectl apply -f ${{ env.DEPLOYMENT_MANIFEST_PATH }} --namespace=chatbot-ai

    - name: Verify deployment
      run: |
        kubectl rollout status deployment/chatbot-ai --namespace=chatbot-ai --timeout=300s
        kubectl get services --namespace=chatbot-ai